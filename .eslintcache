[{"D:\\React\\react-typescript\\src\\reportWebVitals.ts":"1","D:\\React\\react-typescript\\src\\components\\Header\\Header.tsx":"2","D:\\React\\react-typescript\\src\\components\\News\\NewsInput.tsx":"3","D:\\React\\react-typescript\\src\\components\\News\\NewsList.tsx":"4","D:\\React\\react-typescript\\src\\components\\News\\NewsItem.tsx":"5","D:\\React\\react-typescript\\src\\components\\Filter\\Filter.tsx":"6","D:\\News-feed\\src\\App.tsx":"7","D:\\News-feed\\src\\components\\News\\NewsInput.tsx":"8","D:\\News-feed\\src\\components\\News\\NewsList.tsx":"9","D:\\News-feed\\src\\components\\Filter\\Filter.tsx":"10","D:\\News-feed\\src\\components\\Header\\Header.tsx":"11","D:\\News-feed\\src\\components\\News\\NewsItem.tsx":"12","D:\\News-feed\\src\\components\\Home\\Home.tsx":"13","D:\\News-feed\\src\\components\\Authorization\\Registration.tsx":"14","D:\\News-feed\\src\\components\\Authorization\\Entry.tsx":"15","D:\\News-feed\\src\\service\\NewItemService.ts":"16","D:\\News-feed\\src\\entity\\NewItem.ts":"17","D:\\News-feed\\src\\components\\Authorization\\Error.tsx":"18","D:\\News-feed\\src\\hooks\\useInput.ts":"19","D:\\News-feed\\src\\hooks\\useValidation.ts":"20","D:\\News-feed\\src\\assets\\variables.ts":"21","D:\\News-feed\\src\\constants.ts":"22","D:\\News-feed\\src\\index.tsx":"23","D:\\News-feed\\src\\redux\\store\\index.ts":"24","D:\\News-feed\\src\\redux\\reducers\\sessionReducer.ts":"25","D:\\News-feed\\src\\redux\\actions\\sessionAction.ts":"26","D:\\News-feed\\src\\entity\\NewUser.ts":"27","D:\\News-feed\\src\\service\\NewUserService.ts":"28","D:\\News-feed\\src\\components\\Currency\\Currency.js":"29","D:\\News-feed\\src\\components\\RSS_Feed\\Feed.js":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":194,"mtime":1610300189556,"results":"33","hashOfConfig":"32"},{"size":2390,"mtime":1610297421395,"results":"34","hashOfConfig":"32"},{"size":1081,"mtime":1610297513170,"results":"35","hashOfConfig":"32"},{"size":648,"mtime":1610297513185,"results":"36","hashOfConfig":"32"},{"size":284,"mtime":1610300251413,"results":"37","hashOfConfig":"32"},{"size":818,"mtime":1612882322476,"results":"38","hashOfConfig":"39"},{"size":5445,"mtime":1613864198446,"results":"40","hashOfConfig":"39"},{"size":3886,"mtime":1613864436061,"results":"41","hashOfConfig":"39"},{"size":1197,"mtime":1613568717953,"results":"42","hashOfConfig":"39"},{"size":3049,"mtime":1613581675884,"results":"43","hashOfConfig":"39"},{"size":5365,"mtime":1613864404581,"results":"44","hashOfConfig":"39"},{"size":2139,"mtime":1613864281687,"results":"45","hashOfConfig":"39"},{"size":5979,"mtime":1612898294197,"results":"46","hashOfConfig":"39"},{"size":4483,"mtime":1612897898889,"results":"47","hashOfConfig":"39"},{"size":1476,"mtime":1613591497458,"results":"48","hashOfConfig":"39"},{"size":585,"mtime":1613863724746,"results":"49","hashOfConfig":"39"},{"size":749,"mtime":1612128432773,"results":"50","hashOfConfig":"39"},{"size":671,"mtime":1612882864645,"results":"51","hashOfConfig":"39"},{"size":1823,"mtime":1612883054126,"results":"52","hashOfConfig":"39"},{"size":1477,"mtime":1613592873314,"results":"53","hashOfConfig":"39"},{"size":72,"mtime":1612815231690,"results":"54","hashOfConfig":"39"},{"size":366,"mtime":1612810442600,"results":"55","hashOfConfig":"39"},{"size":391,"mtime":1612898269148,"results":"56","hashOfConfig":"39"},{"size":1234,"mtime":1612888648093,"results":"57","hashOfConfig":"39"},{"size":360,"mtime":1612816157093,"results":"58","hashOfConfig":"39"},{"size":379,"mtime":1612896630671,"results":"59","hashOfConfig":"39"},{"size":638,"mtime":1613592884481,"results":"60","hashOfConfig":"39"},{"size":1587,"mtime":1613838775257,"results":"61","hashOfConfig":"39"},{"size":5888,"mtime":1613912022960,"results":"62","hashOfConfig":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"xw58kg",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"16nl5ya",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\react-typescript\\src\\reportWebVitals.ts",[],["131","132"],"D:\\React\\react-typescript\\src\\components\\Header\\Header.tsx",[],"D:\\React\\react-typescript\\src\\components\\News\\NewsInput.tsx",[],"D:\\React\\react-typescript\\src\\components\\News\\NewsList.tsx",[],"D:\\React\\react-typescript\\src\\components\\News\\NewsItem.tsx",["133"],"D:\\React\\react-typescript\\src\\components\\Filter\\Filter.tsx",[],"D:\\News-feed\\src\\App.tsx",[],["134","135"],"D:\\News-feed\\src\\components\\News\\NewsInput.tsx",["136"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { DEFAULT_CATEGORY, FILTERS } from '../../assets/variables';\r\nimport { NewItem } from '../../entity/NewItem';\r\nimport { addNewItem, getNews, updateNewItem } from '../../service/NewItemService';\r\nimport { RootState } from '../../redux/store';\r\n\r\nimport './News.css';\r\n\r\n\r\ntype newsInputProps = {\r\n    title: string,\r\n    text: string,\r\n    category: string,\r\n    newsId: number,\r\n    editNewsItem: boolean,\r\n    setTitle: any,\r\n    setText: any,\r\n    setCategory: any,\r\n    setNewsList: any,\r\n    setId: any,\r\n    setEditNewsItem: any,\r\n    newsList: Array<NewItem>,\r\n}\r\n\r\nconst NewsInput: React.FC<newsInputProps> = ({\r\n   title,\r\n   text,\r\n   category,\r\n   setTitle,\r\n   setText,\r\n   setCategory,\r\n   setNewsList,\r\n   setId,\r\n   setEditNewsItem,\r\n   editNewsItem,\r\n   newsId,\r\n}) => {\r\n\r\n    const [author, setAuthor] = useState<string>('');\r\n    const session = useSelector((state: RootState) => state.session);\r\n    const { name, surname, id } = session.session.currentUser;\r\n    const { isLog } = session.session\r\n\r\n    useEffect(() => {\r\n       if (isLog) {\r\n           setAuthor(`${name} ${surname}`)\r\n       } else {\r\n           setAuthor('Неизвестно')\r\n       }\r\n    }, [title]);\r\n\r\n    const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const handleChangeText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleChangeCategory = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setCategory(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        let newItem: NewItem = new NewItem(\r\n            newsId,\r\n            title,\r\n            text,\r\n            category,\r\n            new Date(),\r\n            author,\r\n            false,\r\n            id\r\n        );\r\n        addNewItem(newItem);\r\n\r\n        setNewsList(getNews());\r\n        setId(Math.floor(Math.random() * 1000000));\r\n        setTitle('');\r\n        setText('');\r\n        setCategory(DEFAULT_CATEGORY);\r\n    }\r\n\r\n    const handleUpdate = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        let newItem: NewItem = new NewItem(\r\n            newsId,\r\n            title,\r\n            text,\r\n            category,\r\n            new Date(),\r\n            author,\r\n            true,\r\n            id\r\n        );\r\n        updateNewItem(newItem)\r\n\r\n        setNewsList(getNews());\r\n        setId(Math.floor(Math.random() * 1000000));\r\n        setTitle('');\r\n        setText('');\r\n        setCategory(DEFAULT_CATEGORY);\r\n        setEditNewsItem(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"news\">\r\n                <div className=\"news__container\">\r\n                    <div className=\"news__title\">\r\n                        <input\r\n                            className=\"news__title-input\"\r\n                            type=\"text\"\r\n                            value={title}\r\n                            name=\"title\"\r\n                            onChange={handleChangeTitle}\r\n                            required\r\n                        />\r\n                        <label className=\"news__title-name\">Заголовок:</label>\r\n                    </div>\r\n\r\n                    <div className=\"news__textarea\">\r\n                        <label className=\"news__textarea-name\" htmlFor=\"text\"> Введите новость: </label>\r\n                        <textarea\r\n                            className=\"news__textarea-text\"\r\n                            id=\"text\"\r\n                            value={text}\r\n                            onChange={handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"news__category\">\r\n                        <label className=\"news__category-name\">\r\n                            Выберите категорию:\r\n                            <select\r\n                                className=\"news__category-select\"\r\n                                name=\"select\"\r\n                                value={category}\r\n                                onChange={handleChangeCategory}>\r\n                                {FILTERS.map(({ id, title }) => (\r\n                                    <option\r\n                                        className=\"news__category-option\"\r\n                                        key={id}\r\n                                        value={title}\r\n                                    >\r\n                                        {title}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    className={editNewsItem ? 'news__button editClass' : 'news__button addClass'}\r\n                    type=\"submit\"\r\n                    onClick={editNewsItem ? handleUpdate : handleSubmit}\r\n                    disabled={!title || !text}\r\n                >\r\n                    {editNewsItem ? 'Редактировать' : 'Опубликовать'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewsInput;\r\n","D:\\News-feed\\src\\components\\News\\NewsList.tsx",[],"D:\\News-feed\\src\\components\\Filter\\Filter.tsx",[],"D:\\News-feed\\src\\components\\Header\\Header.tsx",[],"D:\\News-feed\\src\\components\\News\\NewsItem.tsx",[],"D:\\News-feed\\src\\components\\Home\\Home.tsx",[],"D:\\News-feed\\src\\components\\Authorization\\Registration.tsx",["137"],"import React, { FC, MouseEvent, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { useInput } from '../../hooks/useInput';\r\nimport { STYLE } from '../../assets/variables';\r\n\r\nimport './Authorization.css';\r\nimport { NewUser } from '../../entity/NewUser';\r\nimport { addNewUser, getUsers } from '../../service/NewUserService';\r\n\r\n\r\nconst Registration: FC = () => {\r\n\r\n    const name = useInput('', {isEmpty: true, maxLength: 16, minLength: 2});\r\n    const surname = useInput('', {isEmpty: true, maxLength: 16, minLength: 2});\r\n    const email = useInput('', {isEmpty: true, isEmail: true});\r\n    const password = useInput('', {isEmpty: true, minLength: 6, maxLength: 20});\r\n    const [userId, setUserId] = useState<number>(Math.floor(Math.random() * 1000000));\r\n    const [usersList, setUsersList] = useState<Array<NewUser>>([]);\r\n    const [isRegistration, setRegistration] = useState(false);\r\n\r\n    const handleSubmitUser = (e: MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        let newUser: NewUser = new NewUser(userId, name.value, surname.value, email.value, password.value);\r\n        addNewUser(newUser);\r\n\r\n        setUsersList(getUsers());\r\n        setUserId(Math.floor(Math.random() * 1000000));\r\n        setRegistration(true);\r\n    }\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to='/entry' from='/registration'/>\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <form className=\"form__content\">\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={name.value}\r\n                        required\r\n                        onChange={e => name.onChange(e)}\r\n                        onBlur={e => name.onBlur(e)}\r\n                    />\r\n                    <label className=\"form__field-name\">Имя</label>\r\n                    {(name.isDirty && name.isEmpty) && <span style={STYLE.span}>Поле не должно быть пустым</span>}\r\n                    {(name.isDirty && name.minLengthError) &&\r\n                    <span style={STYLE.span}>Поле должно содержать не менее 6 символов</span>}\r\n                    {(name.isDirty && name.maxLengthError) &&\r\n                    <span style={STYLE.span}>Поле должно содержать более 16 символов</span>}\r\n                </div>\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"surname\"\r\n                        type=\"text\"\r\n                        value={surname.value}\r\n                        required\r\n                        onChange={e => surname.onChange(e)}\r\n                        onBlur={e => surname.onBlur(e)}\r\n                    />\r\n                    <label className=\"form__field-name\">Фамилия</label>\r\n                    {(surname.isDirty && surname.isEmpty) && <span style={STYLE.span}>Поле не должно быть пустым</span>}\r\n                    {(surname.isDirty && surname.minLengthError) &&\r\n                    <span style={STYLE.span}>Поле должно содержать не менее 6 символов</span>}\r\n                    {(surname.isDirty && surname.maxLengthError) &&\r\n                    <span style={STYLE.span}>Поле должно содержать более 16 символов</span>}\r\n                </div>\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={email.value}\r\n                        required\r\n                        onChange={e => email.onChange(e)}\r\n                        onBlur={e => email.onBlur(e)}\r\n                    />\r\n                    <label className=\"form__field-name\">Email</label>\r\n                    {(email.isDirty && email.isEmpty) && <span style={STYLE.span}>Поле не должно быть пустым</span>}\r\n                    {(email.isDirty && email.emailError) && <span style={STYLE.span}>Неправильный формат email</span>}\r\n                </div>\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password.value}\r\n                        required\r\n                        onChange={e => password.onChange(e)}\r\n                        onBlur={e => password.onBlur(e)}\r\n                    />\r\n                    <label className=\"form__field-name\">Пароль</label>\r\n                    {(password.isDirty && password.isEmpty) &&\r\n                    <span style={STYLE.span}>Поле не должно быть пустым</span>}\r\n                    {(password.isDirty && password.minLengthError) &&\r\n                    <span style={STYLE.span}>Пароль должен содержать не менее 6 символов</span>}\r\n                    {(password.isDirty && password.maxLengthError) &&\r\n                    <span style={STYLE.span}>Пароль не должен содержать более 20 символов</span>}\r\n                </div>\r\n\r\n                <button\r\n                    className=\"form__button\"\r\n                    type=\"submit\"\r\n                    onClick={handleSubmitUser}\r\n                    disabled={!name.isInputValid || !surname.isInputValid || !email.isInputValid || !password.isInputValid}\r\n                >\r\n                    Зарегистрироваться\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","D:\\News-feed\\src\\components\\Authorization\\Entry.tsx",["138","139"],"import React, { MouseEvent, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { useInput } from '../../hooks/useInput';\r\nimport { RootState } from '../../redux/store';\r\nimport { addSession } from '../../redux/actions/sessionAction';\r\n\r\nimport { STYLE } from '../../assets/variables';\r\nimport './Authorization.css';\r\nimport { getUsers } from '../../service/NewUserService';\r\n\r\n\r\nconst Entry: React.FC = () => {\r\n    const email = useInput('', {isEmpty: true, isEmail: true});\r\n    const password = useInput('', {isEmpty: true, minLength: 6, maxLength: 20});\r\n    const [isPasswordCorrect, setPasswordCorrect] = useState<null | boolean>(null);\r\n    const [isEmailExist, setEmailExist] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmitEmail = (e: MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        let users = getUsers();\r\n        let isUserExist = users.find((user) => user.email === email.value);\r\n\r\n        if (isUserExist) {\r\n            if (isUserExist.password === password.value) {\r\n                setPasswordCorrect(true);\r\n                const session = {\r\n                    isLog: true,\r\n                    currentUser: {\r\n                        id: isUserExist.id,\r\n                        name: isUserExist.name,\r\n                        surname: isUserExist.surname\r\n                    }\r\n                }\r\n                dispatch(addSession(session));\r\n                sessionStorage.setItem('session', JSON.stringify(session));\r\n\r\n            } else {\r\n                setPasswordCorrect(false);\r\n            }\r\n        } else {\r\n            setEmailExist(true);\r\n        }\r\n    }\r\n\r\n    if (isPasswordCorrect) {\r\n        return <Redirect to='/'/>\r\n    }\r\n\r\n    const {span} = STYLE;\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form className=\"form__content\">\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        onChange={e => email.onChange(e)}\r\n                        onBlur={e => email.onBlur(e)}\r\n                        value={email.value}\r\n                        required\r\n                    />\r\n\r\n                    <label className=\"form__field-name\">Email</label>\r\n                    {(email.isDirty && email.isEmpty) && <span style={span}>Поле не должно быть пустым!</span>}\r\n                    {(email.isDirty && email.emailError) && <span style={span}>Неправильный формат email!</span>}\r\n                </div>\r\n\r\n                <div className=\"form__field\">\r\n                    <input\r\n                        className=\"form__field-input\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={e => password.onChange(e)}\r\n                        onBlur={e => password.onBlur(e)}\r\n                        value={password.value}\r\n                        required\r\n                    />\r\n\r\n                    <label className=\"form__field-name\">Пароль</label>\r\n                    {(password.isDirty && password.isEmpty) &&\r\n                    <span style={span}>Поле не должно быть пустым!</span>}\r\n                    {(password.isDirty && password.minLengthError) &&\r\n                    <span style={span}>Пароль должен содержать не менее 6 символов!</span>}\r\n                    {(password.isDirty && password.maxLengthError) &&\r\n                    <span style={span}>Пароль не должен содержать более 20 символов!</span>}\r\n                </div>\r\n                {isPasswordCorrect === false && <span style={span}>Пароль введен не верно!</span>}\r\n                {isEmailExist ? <span style={span}>Такой пользователь не зарегистрирован!</span> : ''}\r\n\r\n                <button\r\n                    className=\"form__button\"\r\n                    type=\"submit\"\r\n                    disabled={!email.isInputValid || !password.isInputValid}\r\n                    onClick={handleSubmitEmail}\r\n                >\r\n                    Войти\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Entry;\r\n\r\n","D:\\News-feed\\src\\service\\NewItemService.ts",[],"D:\\News-feed\\src\\entity\\NewItem.ts",[],"D:\\News-feed\\src\\components\\Authorization\\Error.tsx",[],"D:\\News-feed\\src\\hooks\\useInput.ts",[],"D:\\News-feed\\src\\hooks\\useValidation.ts",["140"],"import { useEffect, useState } from 'react';\r\n\r\nexport const useValidation = (value: string, validations: any) => {\r\n    const [isEmpty, setEmpty] = useState<boolean>(false);\r\n    const [minLengthError, setMinLengthError] = useState<boolean>(false);\r\n    const [maxLengthError, setMaxLengthError] = useState<boolean>(false);\r\n    const [emailError, setEmailError] = useState<boolean>(false);\r\n    const [isInputValid, setInputValid] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength':\r\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false);\r\n                    break;\r\n                case 'maxLength':\r\n                    value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false);\r\n                    break;\r\n                case 'isEmail':\r\n                    const reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n                    reg.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true);\r\n                    break;\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true);\r\n                    break;\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        if (isEmpty || maxLengthError || minLengthError || emailError) {\r\n            setInputValid(false)\r\n        } else {\r\n            setInputValid(true)\r\n        }\r\n    }, [isEmpty, maxLengthError, minLengthError, emailError])\r\n\r\n    return {\r\n        isEmpty,\r\n        minLengthError,\r\n        maxLengthError,\r\n        emailError,\r\n        isInputValid,\r\n    }\r\n}\r\n","D:\\News-feed\\src\\assets\\variables.ts",[],"D:\\News-feed\\src\\constants.ts",[],"D:\\News-feed\\src\\index.tsx",[],"D:\\News-feed\\src\\redux\\store\\index.ts",[],"D:\\News-feed\\src\\redux\\reducers\\sessionReducer.ts",[],"D:\\News-feed\\src\\redux\\actions\\sessionAction.ts",[],"D:\\News-feed\\src\\entity\\NewUser.ts",[],"D:\\News-feed\\src\\service\\NewUserService.ts",[],"D:\\News-feed\\src\\components\\Currency\\Currency.js",["141"],"import React, {useEffect, useState} from 'react';\r\nimport './Currency.css';\r\n\r\nconst Currency = () => {\r\n\r\n    const [currency, setCurrency] = useState([]);\r\n    const CUR_ID = [145, 298, 292, 355, 293];\r\n    const endPoint = `https://www.nbrb.by/api/exrates/rates?periodicity=0`;\r\n\r\n    let fetchData = () => {\r\n        fetch(endPoint)\r\n            .then(res => res.json())\r\n            .then(result => setCurrency(result.filter(item => CUR_ID.includes(item.Cur_ID))))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"currency\">\r\n            <h2 className=\"currency__title\">Курсы валют на сегодня: </h2>\r\n            <table className=\"currency__table\">\r\n                <tbody>\r\n                {\r\n                    currency.map((item, index) => {\r\n                        return (\r\n                            <tr className=\"currency__column\" key={`${item.Cur_Id}_${index}`}>\r\n                                <td className=\"currency__row\" key={`${item.Cur_Id}__${index}`}>{item.Cur_Name}</td>\r\n                                <td className=\"currency__row\" key={`${item.Cur_Id}-${index}`}>{item.Cur_OfficialRate}</td>\r\n                                <td className=\"currency__row\" key={`${item.Cur_Id}+${index}`}> {item.Cur_Abbreviation}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Currency;\r\n",["142","143"],"D:\\News-feed\\src\\components\\RSS_Feed\\Feed.js",["144","145","146","147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":7,"nodeType":"155","messageId":"156","endLine":11,"endColumn":34},{"ruleId":"149","replacedBy":"157"},{"ruleId":"151","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":52,"column":8,"nodeType":"161","endLine":52,"endColumn":15,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":19,"column":12,"nodeType":"155","messageId":"165","endLine":19,"endColumn":21},{"ruleId":"163","severity":1,"message":"166","line":2,"column":23,"nodeType":"155","messageId":"165","endLine":2,"endColumn":34},{"ruleId":"163","severity":1,"message":"167","line":6,"column":10,"nodeType":"155","messageId":"165","endLine":6,"endColumn":19},{"ruleId":"159","severity":1,"message":"168","line":28,"column":8,"nodeType":"161","endLine":28,"endColumn":15,"suggestions":"169"},{"ruleId":"159","severity":1,"message":"170","line":20,"column":8,"nodeType":"161","endLine":20,"endColumn":10,"suggestions":"171"},{"ruleId":"149","replacedBy":"157"},{"ruleId":"151","replacedBy":"158"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":9,"nodeType":"155","messageId":"165","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"174","line":3,"column":21,"nodeType":"155","messageId":"165","endLine":3,"endColumn":28},{"ruleId":"159","severity":1,"message":"175","line":25,"column":8,"nodeType":"161","endLine":25,"endColumn":18,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":29,"column":26,"nodeType":"179","messageId":"180","endLine":29,"endColumn":28},{"ruleId":"172","severity":1,"message":"181","line":51,"column":25,"nodeType":"155","messageId":"165","endLine":51,"endColumn":27},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"@typescript-eslint/no-redeclare","'NewsItem' is already defined.","Identifier","redeclared",["182"],["183"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLog', 'name', and 'surname'. Either include them or remove the dependency array.","ArrayExpression",["184"],"@typescript-eslint/no-unused-vars","'usersList' is assigned a value but never used.","unusedVar","'useSelector' is defined but never used.","'RootState' is defined but never used.","React Hook useEffect has a missing dependency: 'validations'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["186"],"no-unused-vars","'addNewItem' is defined but never used.","'setNews' is defined but never used.","React Hook useEffect has a missing dependency: 'createNews'. Either include it or remove the dependency array.",["187"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [isLog, name, surname, title]",{"range":"196","text":"197"},"Update the dependencies array to be: [validations, value]",{"range":"198","text":"199"},"Update the dependencies array to be: [fetchData]",{"range":"200","text":"201"},"Update the dependencies array to be: [createNews, newsFeed]",{"range":"202","text":"203"},[1284,1291],"[isLog, name, surname, title]",[1417,1424],"[validations, value]",[583,585],"[fetchData]",[784,794],"[createNews, newsFeed]"]